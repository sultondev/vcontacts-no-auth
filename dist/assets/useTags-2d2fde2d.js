import{y as d}from"./index-e7a8f271.js";function g(t){return t.replace(/[ -]/g,"")}function o(t,s){localStorage.setItem(t,JSON.stringify(s))}function l(t){return t.map(s=>({id:s==null?void 0:s.id}))||[]}const u=d("contactsStore",{state:()=>({contacts:[]}),actions:{initialize(){const t=localStorage.getItem("contacts");t&&(this.contacts=JSON.parse(t))},putContact(t){const s=this.contacts.findIndex(n=>n.id===t.id);this.contacts.splice(s,1,t)},addContact(t){this.contacts.push({...t,id:crypto.randomUUID(),phone:g(t.phone),tags:l(t.tags)}),o("contacts",this.contacts)},deleteContact(t){const s=this.contacts.findIndex(n=>n.id===t);this.contacts.splice(s,1),o("contacts",this.contacts)},saveContacts(){o("contacts",this.contacts)},deleteContactTag(t,s){var c,a,r;const n=(c=this.contacts)==null?void 0:c.findIndex(i=>i.id===s),e=(a=this.contacts[n].tags)==null?void 0:a.findIndex(i=>i.id===t);this.contacts[n].tags=[...(r=this.contacts[n])==null?void 0:r.tags.slice(0,e),...this.contacts[n].tags.slice(e+1)]}},getters:{filteredContacts:t=>(s,n)=>{if(s&&s.length>0&&n)switch(n){case"name":case"email":case"phone":return t.contacts.filter(e=>e[n].toLowerCase().includes(s.toLowerCase()));case"tags":return t.contacts.filter(e=>e.tags.some(c=>(console.log(c,s),s.some(a=>a.id===c.id))));default:return t.contacts}else return t.contacts},getContactById:t=>s=>t.contacts.find(n=>n.id===s)}}),h=d("useTagsStore",{state:()=>({tags:[]}),getters:{tagOptions:t=>t.tags.map(s=>({id:s.id,name:s.title}))||[],transformUserTags:t=>s=>t.tags.filter(n=>s.some(e=>e.id===n.id)).map(n=>({id:n.id,name:n.title}))},actions:{initialize(){const t=localStorage.getItem("tags");t&&(this.tags=JSON.parse(t))},findTagById(t,s){var e;const n=((e=this.tags.find(c=>c.id===t))==null?void 0:e.title)||!1;if(n)return n;u().deleteContactTag(t,s)},createTag(t){const s={title:t,id:crypto.randomUUID()};this.tags.push(s),localStorage.setItem("tags",JSON.stringify(this.tags))},deleteTag(t){const s=this.tags.findIndex(n=>n.id===t);this.tags.splice(s,1),o("tags",this.tags)}}});export{u as a,l,h as u};
